<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>de.kaufhof.ets</groupId>
        <artifactId>ets-poms-root-parent</artifactId>
        <version>0.1.0-SNAPSHOT</version>
        <relativePath>../ets-poms-root-parent/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>ets-poms-dependencies</artifactId>
    <packaging>pom</packaging>
    <name>EShop Technology Stack (ETS) - Dependencies POM</name>
    <description>This is the BOM (bill of material) for the ETS projects</description>

    <dependencyManagement>
        <dependencies>

            <!-- scala libs -->
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${ets.scala.compat.version}</artifactId>
                <version>${ets.scalatest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${ets.scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${ets.scala.version}</version>
            </dependency>

            <!-- Akka -->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor_${ets.scala.compat.version}</artifactId>
                <version>${ets.akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-stream_${ets.scala.compat.version}</artifactId>
                <version>${ets.akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-cluster_${ets.scala.compat.version}</artifactId>
                <version>${ets.akka.version}</version>
            </dependency>

            <!-- Akka-Remote:
                 Implicitly pulled some akka-cluster, explicitly mentioned here
                 for dependency exclusion of the unnecessary transports

                 Because of many classpath conflicts with netty we avoid netty
                 whenever possible (without performance issues). Akka remoting offers
                 a new way called artery which ships the aeron transport / can do tcp
                 over akka streams which should be perfectly fine for us.
             -->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-remote_${ets.scala.compat.version}</artifactId>
                <version>${ets.akka.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-protobuf_${ets.scala.compat.version}</artifactId>
                <version>${ets.akka.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http_${ets.scala.compat.version}</artifactId>
                <version>${ets.akka.http.version}</version>
            </dependency>

            <!-- maintained in the akka-http git namespace -->
            <!-- explicitly declared because http and it's libraries are first class -->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-parsing_2.12</artifactId>
                <version>${ets.akka.http.version}</version>
            </dependency>

            <!-- Transitive dependency of akka-stream -> typesafe-ssl-config, but first class citizen too -->
            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-parser-combinators_2.12</artifactId>
                <version>1.1.0</version><!-- TODO remove versions -->
            </dependency>

            <!--
                Transitive dependency of Akka-Actor, First class Citizen, too
            -->
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${ets.typesafe.config.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-persistence-cassandra_${ets.scala.compat.version}</artifactId>
                <version>0.54</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.datastax.cassandra</groupId>
                        <artifactId>cassandra-driver-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Cassandra -->
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>${ets.cassandra.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-extras</artifactId>
                <version>${ets.cassandra.driver.version}</version>
            </dependency>


            <!-- no third party dependencies <3 -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${ets.logback.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${ets.logback.version}</version>
            </dependency>

            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${ets.logstash.logback.encoder.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.scala-logging</groupId>
                <artifactId>scala-logging_${ets.scala.compat.version}</artifactId>
                <version>${ets.typesafe.scala-logging.version}</version>
            </dependency>

            <dependency>
                <groupId>de.kaufhof.ess.itgr.gts</groupId>
                <artifactId>pillar_${ets.scala.compat.version}</artifactId>
                <version>${ets.pillar.version}</version>
            </dependency>

            <!-- Required at least by the cassandra driver and scala logging, SLF4j is a good logging facade
                 and should be used if you don't use scala-logging directly -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${ets.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${ets.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${ets.slf4j.version}</version>
            </dependency>

            <!-- Jackson -->
            <!-- Jackson json is used by many libs, therefore it's a first class citizen. We prefer
            the current version (fasterxml). Some libraries depend on the 1.x version (codehaus namespace)
            but we try to avoid the 1.x version.
            -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${ets.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${ets.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${ets.fasterxml.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${ets.fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${ets.fasterxml.jackson.version}</version>
            </dependency>


            <!-- http components -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${ets.httpcomponents.httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${ets.httpcomponents.httpcore.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpasyncclient</artifactId>
                <version>${ets.httpcomponents.httpasyncclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-nio</artifactId>
                <version>${ets.httpcomponents.httpcore.version}</version>
            </dependency>

            <!-- play json stuff -->
            <dependency>
                <groupId>com.typesafe.play</groupId>
                <artifactId>play-json_${ets.scala.compat.version}</artifactId>
                <version>${ets.playframework.json.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.play</groupId>
                <artifactId>play-functional_${ets.scala.compat.version}</artifactId>
                <version>${ets.playframework.json.version}</version>
            </dependency>

            <!-- other utils stuff -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${ets.joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${ets.elasticsearch.restclient.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${ets.commons.codec.version}</version>
            </dependency>

            <!-- ETS Dependencies -->
            <!-- May contain not (yet) published libraries -->
            <dependency>
                <groupId>de.kaufhof.ets</groupId>
                <artifactId>ets-filestorage-core</artifactId>
                <version>${ets.filestorage.version}</version>
            </dependency>

            <dependency>
                <groupId>de.kaufhof.ets</groupId>
                <artifactId>ets-akka-stream-utils-core</artifactId>
                <version>${ets.akka-stream-utils-core.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

</project>
